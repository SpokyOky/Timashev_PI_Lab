// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Timashev_PI_Lab;

namespace Timashev_PI_Lab.Migrations
{
    [DbContext(typeof(Database))]
    partial class DatabaseModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Timashev_PI_Lab.Models.ChemElement", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Gram")
                        .HasColumnType("decimal(12,2)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ChemElements");

                    b.HasData(
                        new
                        {
                            Id = 0,
                            Gram = 0m,
                            Name = "Б"
                        },
                        new
                        {
                            Id = 1,
                            Gram = 0m,
                            Name = "Ж"
                        },
                        new
                        {
                            Id = 2,
                            Gram = 0m,
                            Name = "У"
                        },
                        new
                        {
                            Id = 3,
                            Gram = 0m,
                            Name = "B1"
                        },
                        new
                        {
                            Id = 4,
                            Gram = 0m,
                            Name = "C"
                        },
                        new
                        {
                            Id = 5,
                            Gram = 0m,
                            Name = "A"
                        },
                        new
                        {
                            Id = 6,
                            Gram = 0m,
                            Name = "E"
                        },
                        new
                        {
                            Id = 7,
                            Gram = 0m,
                            Name = "Ca"
                        },
                        new
                        {
                            Id = 8,
                            Gram = 0m,
                            Name = "P"
                        },
                        new
                        {
                            Id = 9,
                            Gram = 0m,
                            Name = "Mg"
                        });
                });

            modelBuilder.Entity("Timashev_PI_Lab.Models.Product", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("DeleteMark")
                        .HasColumnType("bit");

                    b.Property<int>("Gram")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Timashev_PI_Lab.Models.ProductChemElement", b =>
                {
                    b.Property<int>("PId")
                        .HasColumnType("int");

                    b.Property<int>("CEId")
                        .HasColumnType("int");

                    b.Property<decimal>("Gram")
                        .HasColumnType("decimal(12,2)");

                    b.HasKey("PId", "CEId");

                    b.HasIndex("CEId");

                    b.ToTable("ProductChemElements");
                });

            modelBuilder.Entity("Timashev_PI_Lab.Models.ProductRecipe", b =>
                {
                    b.Property<int>("PId")
                        .HasColumnType("int");

                    b.Property<int>("RId")
                        .HasColumnType("int");

                    b.Property<int>("Gram")
                        .HasColumnType("int");

                    b.HasKey("PId", "RId");

                    b.HasIndex("RId");

                    b.ToTable("ProductRecipes");
                });

            modelBuilder.Entity("Timashev_PI_Lab.Models.Recipe", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("DeleteMark")
                        .HasColumnType("bit");

                    b.Property<string>("HowToCook")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Quality")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Recipes");
                });

            modelBuilder.Entity("Timashev_PI_Lab.Models.TechCard", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("DeleteMark")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RecipeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RecipeId");

                    b.ToTable("TechCards");
                });

            modelBuilder.Entity("Timashev_PI_Lab.Models.User", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FIO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Login")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 0,
                            FIO = "admin",
                            Login = "admin",
                            Password = "admin"
                        });
                });

            modelBuilder.Entity("Timashev_PI_Lab.Models.ProductChemElement", b =>
                {
                    b.HasOne("Timashev_PI_Lab.Models.ChemElement", "ChemElement")
                        .WithMany("ProductChemElements")
                        .HasForeignKey("CEId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Timashev_PI_Lab.Models.Product", "Product")
                        .WithMany("ProductChemElements")
                        .HasForeignKey("PId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChemElement");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Timashev_PI_Lab.Models.ProductRecipe", b =>
                {
                    b.HasOne("Timashev_PI_Lab.Models.Product", "Product")
                        .WithMany("ProductRecipes")
                        .HasForeignKey("PId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Timashev_PI_Lab.Models.Recipe", "Recipe")
                        .WithMany("ProductRecipes")
                        .HasForeignKey("RId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("Timashev_PI_Lab.Models.TechCard", b =>
                {
                    b.HasOne("Timashev_PI_Lab.Models.Recipe", "Recipe")
                        .WithMany("TechCards")
                        .HasForeignKey("RecipeId");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("Timashev_PI_Lab.Models.ChemElement", b =>
                {
                    b.Navigation("ProductChemElements");
                });

            modelBuilder.Entity("Timashev_PI_Lab.Models.Product", b =>
                {
                    b.Navigation("ProductChemElements");

                    b.Navigation("ProductRecipes");
                });

            modelBuilder.Entity("Timashev_PI_Lab.Models.Recipe", b =>
                {
                    b.Navigation("ProductRecipes");

                    b.Navigation("TechCards");
                });
#pragma warning restore 612, 618
        }
    }
}
